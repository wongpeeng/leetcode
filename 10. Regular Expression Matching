//这个开始我根绝之前的字符匹配，使用矩阵，但是写不出来，主要是不知道需要具体规则
//首先s是目标，里面不包含.和*,p中不包含连续的*不然的话会false
//然后要设置初始条件，就是p与空的匹配结果，然后中间要根据匹配规则去匹配
public class Solution {
    /////我们是用p去匹配s，s不包含.和*这是关键
    public boolean isMatch(String s, String p) {
        if(s==null||p==null) return false;
        boolean[][] res=new boolean[s.length()+1][p.length()+1];
        res[0][0]=true;
        for(int i=1;i<=p.length();i++){
            if(p.charAt(i-1)=='*') {
                if(i==1)continue;
                res[0][i]=res[0][i-1];
                if(i-2>=0) res[0][i]|=res[0][i-2];}
        }//for
            
        char m,n;
        for(int i=1;i<=s.length();i++)
            for(int j=1;j<=p.length();j++){
                m=s.charAt(i-1);
                n=p.charAt(j-1);
                if(m==n||n=='.')
                    res[i][j]=res[i-1][j-1];
                else{
                    if(n=='*'){
                        if(j==1) continue;
                        if(p.charAt(j-2)=='.'||p.charAt(j-2)==m) res[i][j]=res[i-1][j]|res[i][j-2];
                        else
                            res[i][j]=res[i][j-2];
                    }
                }
            }//for
        return res[s.length()][p.length()];
    }
}

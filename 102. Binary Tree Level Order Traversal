//bfs的方法，以及list的添加顺序控制，用到了linkdelist以及add的用法
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list1=new LinkedList<>();
        ArrayList<Integer> list2=new ArrayList<Integer>();
        if(root==null) return list1;
        Queue<TreeNode> q1=new LinkedList<TreeNode>();
        Queue<Integer> q2=new LinkedList<Integer>();
        TreeNode pre=root;int num1=0;
        TreeNode post; int num2;
        q1.add(pre);q2.add(num1);
        while(!q1.isEmpty()){
            post=q1.remove();
            num2=q2.remove();
            if(num1==num2)
                list2.add(post.val);
            else{
                list1.add(list2);
                list2=new ArrayList<Integer>();
                list2.add(post.val);
            }
            pre=post;
            num1=num2;
            if(post.left!=null){q1.add(post.left);q2.add(num1+1);}
            if(post.right!=null){q1.add(post.right);q2.add(num1+1);}
        }//while
        list1.add(list2);
        return list1;
    }
}

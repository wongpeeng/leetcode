/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 //根据排序算法的特性分析，这个需要断开中间，要熟悉算法的复杂度
 //使用归并排序，因为是链表空间可以省下来
public class Solution {
    public ListNode sortList(ListNode head) {
        int length=0;
        ListNode t=head;
        for(;t!=null;t=t.next) length++;
        if(length<2) return head;
        return st(head,length);
        
    }//st
    public ListNode st(ListNode h,int length){
        if(length==1) return h;
        int mid=length/2;
        ListNode t1=h;
        for(int i=1;i<mid;i++)t1=t1.next;
        ListNode t2=t1.next;
        t1.next=null;//将链断开
        t1=st(h,mid);t2=st(t2,length-length/2);
        /////归并排序
        ListNode head=new ListNode(0);
        ListNode t3=head;
        while(t1!=null&&t2!=null){
            if(t1.val>t2.val) {t3.next=t2;t2=t2.next;}
            else{t3.next=t1;t1=t1.next;}
            t3=t3.next;
        }//while
        if(t1!=null) t3.next=t1;
        if(t2!=null) t3.next=t2;
        return head.next;
    }//s1
    
}//sl

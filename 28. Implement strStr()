public class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.length()==0) return 0;
        if(needle.length()==0) return -1;
        ///kmp方法
        int[] next=new int[needle.length()];
        next[0]=-1;
        int i=0;
        int j=-1;
        while(i<needle.length()-1){
            if(j==-1||needle.charAt(i)==needle.charAt(j)){
                i++;j++;
                next[i]=j;
                if(needle.charAt(i)==needle.charAt(j))next[i]=next[j];
            }
            else j=next[j];
        }//while
        
        ////进行匹配
        i=0;j=0;
        while(i<haystack.length()){
            if(j==needle.length())break;
            if(j==-1||haystack.charAt(i)==needle.charAt(j))
                {i++;j++;}
            else j=next[j];
        }//while
        return j==needle.length()?i-needle.length():-1;
    }
}

//我自己写的是，给出数组，然后一次循环操作，这样的问题是当数字很大的时候内存超过，时间超过
//但其实这是一道数学题，首先所有的灯都是关的，所以，只要一个数字的等起分解因子数是奇数的时候是开着的
//那怎么才能判断一个是基数的呢，这样的话，这个数必须是能被开方的数，求n以内所有的开方数，直接对n开方，
//参考网址：http://blog.csdn.net/zhangxiao93/article/details/50370170
public class Solution {
    public int bulbSwitch(int n) {
        if(n==0) return 0;
        if(n==1) return 1;
        int sPos=0;
        int[] res=new int[n];
        for(int i=0;i<n;i++)
            res[i]=1;
        int count=0;
        for(int i=2;i<=n;i++){
            for(sPos=i-1;sPos<n;sPos+=i)
                res[sPos]=-res[sPos];
        }//for
        for(sPos=0;sPos<n;sPos++)
            if(res[sPos]==1)count=count+res[sPos];
        return count;
    }//bulbswitch
}
//网上答案
public class Solution {
    public int bulbSwitch(int n) {
        return (int)(Math.sqrt(n));
    }//bulbswitch
}

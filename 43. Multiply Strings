//我是用的模拟乘法，速度很慢，后来看到解答，可以i位和j位的乘法结果存到i+j+1位，然后再处理，确实很快，又自己写了一遍
public class Solution {
    public String multiply(String num1, String num2) {
        if(num1.length()==0||num2.length()==0) return "";
        char[] n1=num1.toCharArray();
        char[] n2=num2.toCharArray();
        int[] r=new int[num1.length()+num2.length()];
        int i=0;int j=0;
        for(;i<n1.length;i++)
            for(j=0;j<n2.length;j++)
                r[i+j+1]+=((int)(n1[i]-'0'))*((int)(n2[j]-'0'));
        StringBuilder res=new StringBuilder();
        int carry=0;int sum=0;
        i=n1.length+n2.length-1;
        for(;i>=0;i--){
            sum=r[i]+carry;
            carry=sum/10;
            sum=sum%10;
            res.insert(0,(char)('0'+sum));
        }
        for(i=0;i<res.length();i++) if(res.charAt(i)!='0')break;
        if(i==res.length()) return "0";
        return res.toString().substring(i,res.length());
                
        
        
    }
}
/////////////////////
public class Solution {
    public String multiply(String num1, String num2) {
        if(num1.length()==0||num2.length()==0) return "";
        StringBuilder res=new StringBuilder();res.append('0');
        StringBuilder t1=new StringBuilder(num1);
        StringBuilder t2=new StringBuilder(num2);
        StringBuilder t3;
        if(t1.length()<t2.length()){t3=t2;t2=t1;t1=t3;}
        int i=t2.length()-1;
        for(;i>=0;i--)
            res=add(res,my(t1,t2.charAt(i),t2.length()-i-1));
            //res=my(t1,t2.charAt(i),t2.length()-1-i);
        return res.toString();
        
    }
    public StringBuilder add(StringBuilder x,StringBuilder y){
        if(x.length()>y.length()){StringBuilder temp;temp=y;y=x;x=temp;}
        int a,b,sum,carry=0;
        int i=x.length()-1;
        int j=y.length()-1;
        for(;i>=0;i--,j--){
            a=x.charAt(i)-'0';b=y.charAt(j)-'0';sum=a+b+carry;
            carry=sum>=10?1:0;
            y.setCharAt(j,(char)('0'+sum%10));
        }
        for(;j>=0;j--){
            b=y.charAt(j)-'0';sum=b+carry;
            carry=sum>=10?1:0;
            y.setCharAt(j,(char)('0'+sum%10));
        }//for
        if(carry==1) y.insert(0,carry);
        return y;
    }//add，y是结果
    public StringBuilder my(StringBuilder x,char y,int p){
        int a,b,m,carry=0;
        StringBuilder res=new StringBuilder();
        if(y=='0'){res.append('0');return res;}
        b=y-'0';
        int i=x.length()-1;
        for(;p>0;p--)res.append('0');
        for(;i>=0;i--){
            a=x.charAt(i)-'0';
            m=a*b+carry;
            carry=m/10;
            res.insert(0,m%10);
        }//for
        if(carry!=0)res.insert(0,carry);
        return res;
    }//一位乘法
}
